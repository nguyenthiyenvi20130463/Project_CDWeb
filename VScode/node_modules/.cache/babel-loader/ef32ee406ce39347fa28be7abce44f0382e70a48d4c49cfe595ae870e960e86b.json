{"ast":null,"code":"import { CREATE_ORDER_FAILURE, CREATE_ORDER_REQUEST, CREATE_ORDER_SUCCESS, GET_ORDER_BY_ID_FAILURE, GET_ORDER_BY_ID_REQUEST, GET_ORDER_BY_ID_SUCCESS } from \"./ActionType\";\nimport { api } from \"../../config/apiConfig\";\nexport const createOrder = reqdata => async dispatch => {\n  dispatch({\n    type: CREATE_ORDER_REQUEST\n  });\n  try {\n    const {\n      data\n    } = await api.post(`/api/orders`, reqdata.address);\n    if (data.id) {\n      reqdata.navigate({\n        search: `step=3&order_id=${data.id}`\n      });\n    }\n    console.log(\"created order - \", data);\n    dispatch({\n      type: CREATE_ORDER_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    console.log(\"catch error : \", error);\n    dispatch({\n      type: CREATE_ORDER_FAILURE,\n      payload: error.message\n    });\n  }\n};\nexport const getOrderById = orderId => async dispatch => {\n  dispatch({\n    type: GET_ORDER_BY_ID_REQUEST\n  });\n  try {\n    const {\n      data\n    } = await api.get(`/api/orders/${orderId}`);\n    console.log(\"order by id \", data);\n    dispatch({\n      type: GET_ORDER_BY_ID_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    console.log(\"catch \", error);\n    dispatch({\n      type: GET_ORDER_BY_ID_FAILURE,\n      payload: error.message\n    });\n  }\n};","map":{"version":3,"names":["CREATE_ORDER_FAILURE","CREATE_ORDER_REQUEST","CREATE_ORDER_SUCCESS","GET_ORDER_BY_ID_FAILURE","GET_ORDER_BY_ID_REQUEST","GET_ORDER_BY_ID_SUCCESS","api","createOrder","reqdata","dispatch","type","data","post","address","id","navigate","search","console","log","payload","error","message","getOrderById","orderId","get"],"sources":["D:/LapTrinhWeb/LapTrinhWeb/ChuyenDeWeb/Project_CDWeb/VScode/src/State/Order/Action.js"],"sourcesContent":["import {\r\n    CREATE_ORDER_FAILURE,\r\n    CREATE_ORDER_REQUEST,\r\n    CREATE_ORDER_SUCCESS,\r\n    GET_ORDER_BY_ID_FAILURE,\r\n    GET_ORDER_BY_ID_REQUEST,\r\n    GET_ORDER_BY_ID_SUCCESS\r\n} from \"./ActionType\";\r\nimport { api } from \"../../config/apiConfig\";\r\n\r\nexport const createOrder = (reqdata) => async (dispatch) => {\r\n    dispatch({ type: CREATE_ORDER_REQUEST });\r\n    try {\r\n\r\n        const { data } = await api.post(\r\n            `/api/orders`,\r\n            reqdata.address,\r\n\r\n        );\r\n        if (data.id) {\r\n            reqdata.navigate({ search: `step=3&order_id=${data.id}` });\r\n        }\r\n        console.log(\"created order - \", data);\r\n        dispatch({\r\n            type: CREATE_ORDER_SUCCESS,\r\n            payload: data,\r\n        });\r\n    } catch (error) {\r\n        console.log(\"catch error : \", error);\r\n        dispatch({\r\n            type: CREATE_ORDER_FAILURE,\r\n            payload: error.message,\r\n        });\r\n    }\r\n};\r\n\r\nexport const getOrderById = (orderId) => async (dispatch) => {\r\n    dispatch({ type: GET_ORDER_BY_ID_REQUEST });\r\n    try {\r\n\r\n        const { data } = await api.get(\r\n            `/api/orders/${orderId}`,\r\n        );\r\n        console.log(\"order by id \", data);\r\n        dispatch({\r\n            type: GET_ORDER_BY_ID_SUCCESS,\r\n            payload: data,\r\n        });\r\n    } catch (error) {\r\n        console.log(\"catch \", error)\r\n        dispatch({\r\n            type: GET_ORDER_BY_ID_FAILURE,\r\n            payload: error.message\r\n        });\r\n    }\r\n};"],"mappings":"AAAA,SACIA,oBAAoB,EACpBC,oBAAoB,EACpBC,oBAAoB,EACpBC,uBAAuB,EACvBC,uBAAuB,EACvBC,uBAAuB,QACpB,cAAc;AACrB,SAASC,GAAG,QAAQ,wBAAwB;AAE5C,OAAO,MAAMC,WAAW,GAAIC,OAAO,IAAK,MAAOC,QAAQ,IAAK;EACxDA,QAAQ,CAAC;IAAEC,IAAI,EAAET;EAAqB,CAAC,CAAC;EACxC,IAAI;IAEA,MAAM;MAAEU;IAAK,CAAC,GAAG,MAAML,GAAG,CAACM,IAAI,CAC1B,aAAY,EACbJ,OAAO,CAACK,OAEZ,CAAC;IACD,IAAIF,IAAI,CAACG,EAAE,EAAE;MACTN,OAAO,CAACO,QAAQ,CAAC;QAAEC,MAAM,EAAG,mBAAkBL,IAAI,CAACG,EAAG;MAAE,CAAC,CAAC;IAC9D;IACAG,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEP,IAAI,CAAC;IACrCF,QAAQ,CAAC;MACLC,IAAI,EAAER,oBAAoB;MAC1BiB,OAAO,EAAER;IACb,CAAC,CAAC;EACN,CAAC,CAAC,OAAOS,KAAK,EAAE;IACZH,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEE,KAAK,CAAC;IACpCX,QAAQ,CAAC;MACLC,IAAI,EAAEV,oBAAoB;MAC1BmB,OAAO,EAAEC,KAAK,CAACC;IACnB,CAAC,CAAC;EACN;AACJ,CAAC;AAED,OAAO,MAAMC,YAAY,GAAIC,OAAO,IAAK,MAAOd,QAAQ,IAAK;EACzDA,QAAQ,CAAC;IAAEC,IAAI,EAAEN;EAAwB,CAAC,CAAC;EAC3C,IAAI;IAEA,MAAM;MAAEO;IAAK,CAAC,GAAG,MAAML,GAAG,CAACkB,GAAG,CACzB,eAAcD,OAAQ,EAC3B,CAAC;IACDN,OAAO,CAACC,GAAG,CAAC,cAAc,EAAEP,IAAI,CAAC;IACjCF,QAAQ,CAAC;MACLC,IAAI,EAAEL,uBAAuB;MAC7Bc,OAAO,EAAER;IACb,CAAC,CAAC;EACN,CAAC,CAAC,OAAOS,KAAK,EAAE;IACZH,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEE,KAAK,CAAC;IAC5BX,QAAQ,CAAC;MACLC,IAAI,EAAEP,uBAAuB;MAC7BgB,OAAO,EAAEC,KAAK,CAACC;IACnB,CAAC,CAAC;EACN;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}