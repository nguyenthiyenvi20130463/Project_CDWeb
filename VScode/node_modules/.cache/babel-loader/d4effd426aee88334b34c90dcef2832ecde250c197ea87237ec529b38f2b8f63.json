{"ast":null,"code":"import { api } from \"../../../config/apiConfig\";\nimport { CANCELED_ORDER_FAILURE, CANCELED_ORDER_REQUEST, CANCELED_ORDER_SUCCESS, CONFIRMED_ORDER_FAILURE, CONFIRMED_ORDER_REQUEST, CONFIRMED_ORDER_SUCCESS, DELETE_ORDER_FAILURE, DELETE_ORDER_REQUEST, DELETE_ORDER_SUCCESS, DELIVERED_ORDER_FAILURE, DELIVERED_ORDER_REQUEST, DELIVERED_ORDER_SUCCESS, GET_ORDERS_FAILURE, GET_ORDERS_REQUEST, GET_ORDERS_SUCCESS, SHIP_ORDER_FAILURE, SHIP_ORDER_REQUEST, SHIP_ORDER_SUCCESS } from \"./ActionType\";\nexport const getOrders = () => {\n  return async dispatch => {\n    dispatch({\n      type: GET_ORDERS_REQUEST\n    });\n    try {\n      const response = await api.get(`/api/admin/orders/`);\n      dispatch({\n        type: GET_ORDERS_SUCCESS,\n        payload: response.data\n      });\n    } catch (error) {\n      dispatch({\n        type: GET_ORDERS_FAILURE,\n        payload: error.message\n      });\n    }\n  };\n};\nexport const confirmOrder = orderId => {\n  return async dispatch => {\n    dispatch({\n      type: CONFIRMED_ORDER_REQUEST\n    });\n    try {\n      const response = await api.put(`/api/admin/orders/${orderId}/confirmed`);\n      dispatch({\n        type: CONFIRMED_ORDER_SUCCESS,\n        payload: response.data\n      });\n    } catch (error) {\n      dispatch({\n        type: CONFIRMED_ORDER_FAILURE,\n        payload: error.message\n      });\n    }\n  };\n};\nexport const shipOrder = orderId => {\n  return async dispatch => {\n    dispatch({\n      type: SHIP_ORDER_REQUEST\n    });\n    try {\n      const response = await api.put(`/api/admin/orders/${orderId}/ship`);\n      dispatch({\n        type: SHIP_ORDER_SUCCESS,\n        payload: response.data\n      });\n    } catch (error) {\n      dispatch({\n        type: SHIP_ORDER_FAILURE,\n        payload: error.message\n      });\n    }\n  };\n};\nexport const deliveredOrder = orderId => {\n  return async dispatch => {\n    dispatch({\n      type: DELIVERED_ORDER_REQUEST\n    });\n    try {\n      const response = await api.put(`/api/admin/orders/${orderId}/deliver`);\n      dispatch({\n        type: DELIVERED_ORDER_SUCCESS,\n        payload: response.data\n      });\n    } catch (error) {\n      dispatch({\n        type: DELIVERED_ORDER_FAILURE,\n        payload: error.message\n      });\n    }\n  };\n};\nexport const cancelOrder = orderId => {\n  return async dispatch => {\n    dispatch({\n      type: CANCELED_ORDER_REQUEST\n    });\n    try {\n      const response = await api.put(`/api/admin/orders/${orderId}/cancel`);\n      const data = response.data;\n      dispatch({\n        type: CANCELED_ORDER_SUCCESS,\n        payload: data\n      });\n    } catch (error) {\n      dispatch({\n        type: CANCELED_ORDER_FAILURE,\n        payload: error.message\n      });\n    }\n  };\n};\nexport const deleteOrder = orderId => {\n  return async dispatch => {\n    dispatch({\n      type: DELETE_ORDER_REQUEST\n    });\n    try {\n      const response = await api.delete(`/api/admin/orders/${orderId}/delete`);\n      dispatch({\n        type: DELETE_ORDER_SUCCESS,\n        payload: response.data\n      });\n    } catch (error) {\n      dispatch({\n        type: DELETE_ORDER_FAILURE,\n        payload: error.message\n      });\n    }\n  };\n};","map":{"version":3,"names":["api","CANCELED_ORDER_FAILURE","CANCELED_ORDER_REQUEST","CANCELED_ORDER_SUCCESS","CONFIRMED_ORDER_FAILURE","CONFIRMED_ORDER_REQUEST","CONFIRMED_ORDER_SUCCESS","DELETE_ORDER_FAILURE","DELETE_ORDER_REQUEST","DELETE_ORDER_SUCCESS","DELIVERED_ORDER_FAILURE","DELIVERED_ORDER_REQUEST","DELIVERED_ORDER_SUCCESS","GET_ORDERS_FAILURE","GET_ORDERS_REQUEST","GET_ORDERS_SUCCESS","SHIP_ORDER_FAILURE","SHIP_ORDER_REQUEST","SHIP_ORDER_SUCCESS","getOrders","dispatch","type","response","get","payload","data","error","message","confirmOrder","orderId","put","shipOrder","deliveredOrder","cancelOrder","deleteOrder","delete"],"sources":["D:/LapTrinhWeb/LapTrinhWeb/ChuyenDeWeb/Project_CDWeb/VScode/src/State/Admin/Order/Action.js"],"sourcesContent":["import { api } from \"../../../config/apiConfig\";\r\nimport {\r\n    CANCELED_ORDER_FAILURE,\r\n    CANCELED_ORDER_REQUEST,\r\n    CANCELED_ORDER_SUCCESS,\r\n    CONFIRMED_ORDER_FAILURE,\r\n    CONFIRMED_ORDER_REQUEST,\r\n    CONFIRMED_ORDER_SUCCESS,\r\n    DELETE_ORDER_FAILURE,\r\n    DELETE_ORDER_REQUEST,\r\n    DELETE_ORDER_SUCCESS,\r\n    DELIVERED_ORDER_FAILURE,\r\n    DELIVERED_ORDER_REQUEST,\r\n    DELIVERED_ORDER_SUCCESS,\r\n    GET_ORDERS_FAILURE,\r\n    GET_ORDERS_REQUEST,\r\n    GET_ORDERS_SUCCESS,\r\n    SHIP_ORDER_FAILURE,\r\n    SHIP_ORDER_REQUEST,\r\n    SHIP_ORDER_SUCCESS\r\n} from \"./ActionType\";\r\n\r\nexport const getOrders = () => {\r\n    return async (dispatch) => {\r\n        dispatch({ type: GET_ORDERS_REQUEST });\r\n        try {\r\n            const response = await api.get(`/api/admin/orders/`);\r\n            dispatch({ type: GET_ORDERS_SUCCESS, payload: response.data });\r\n        } catch (error) {\r\n            dispatch({ type: GET_ORDERS_FAILURE, payload: error.message });\r\n        }\r\n    };\r\n};\r\n\r\nexport const confirmOrder = (orderId) => {\r\n    return async (dispatch) => {\r\n        dispatch({ type: CONFIRMED_ORDER_REQUEST });\r\n        try {\r\n            const response = await api.put(`/api/admin/orders/${orderId}/confirmed`);\r\n            dispatch({ type: CONFIRMED_ORDER_SUCCESS, payload: response.data });\r\n        } catch (error) {\r\n            dispatch({ type: CONFIRMED_ORDER_FAILURE, payload: error.message });\r\n        }\r\n    };\r\n};\r\n\r\nexport const shipOrder = (orderId) => {\r\n    return async (dispatch) => {\r\n        dispatch({ type: SHIP_ORDER_REQUEST });\r\n        try {\r\n            const response = await api.put(`/api/admin/orders/${orderId}/ship`);\r\n            dispatch({ type: SHIP_ORDER_SUCCESS, payload: response.data });\r\n        } catch (error) {\r\n            dispatch({ type: SHIP_ORDER_FAILURE, payload: error.message });\r\n        }\r\n    };\r\n};\r\n\r\nexport const deliveredOrder = (orderId) => {\r\n    return async (dispatch) => {\r\n        dispatch({ type: DELIVERED_ORDER_REQUEST });\r\n        try {\r\n            const response = await api.put(`/api/admin/orders/${orderId}/deliver`);\r\n            dispatch({ type: DELIVERED_ORDER_SUCCESS, payload: response.data });\r\n        } catch (error) {\r\n            dispatch({ type: DELIVERED_ORDER_FAILURE, payload: error.message });\r\n        }\r\n    };\r\n};\r\n\r\nexport const cancelOrder = (orderId) => {\r\n    return async (dispatch) => {\r\n        dispatch({ type: CANCELED_ORDER_REQUEST });\r\n\r\n        try {\r\n            const response = await api.put(`/api/admin/orders/${orderId}/cancel`);\r\n            const data = response.data;\r\n            dispatch({ type: CANCELED_ORDER_SUCCESS, payload: data })\r\n        } catch (error) {\r\n            dispatch({ type: CANCELED_ORDER_FAILURE, payload: error.message });\r\n        }\r\n    };\r\n\r\n};\r\n\r\nexport const deleteOrder = (orderId) => {\r\n    return async (dispatch) => {\r\n        dispatch({ type: DELETE_ORDER_REQUEST });\r\n        try {\r\n            const response = await api.delete(`/api/admin/orders/${orderId}/delete`);\r\n            dispatch({ type: DELETE_ORDER_SUCCESS, payload: response.data });\r\n        } catch (error) {\r\n            dispatch({ type: DELETE_ORDER_FAILURE, payload: error.message });\r\n        }\r\n    };\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}